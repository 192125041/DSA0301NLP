class PluralFiniteStateMachine:
    def __init__(self):
        self.transitions = {
            'q0': {'y': 'q1', 'default': 'q2'},
            'q1': {'default': 'q2'},
            'q2': {'s': 'q3'},
            'q3': {}
        }
        self.current_state = 'q0'

    def generate_plural(self, noun):
        for char in noun:
            if char in self.transitions[self.current_state]:
                self.current_state = self.transitions[self.current_state][char]
            else:
                self.current_state = self.transitions[self.current_state]['default']

        if self.current_state == 'q1':
            return noun[:-1] + 'ies'  
        elif self.current_state == 'q2':
            return noun + 's'  
        else:
            return noun  
noun = input("Enter a singular noun: ")
plural_fsm = PluralFiniteStateMachine()
plural_form = plural_fsm.generate_plural(noun)
print(f"Plural form: {plural_form}")
